<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="1.85.6">
  <Settings>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="color" updates="None" val="$[1.000,1.000,1.000]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="Experiment info" updates="None" val="{u'stimorder': u'1', u'session': u'001', u'participant': u'', u'manigroup': u'H'}" valType="code"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Window size (pixels)" updates="None" val="[1680, 1050]" valType="code"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="expName" updates="None" val="Financial Problems Task" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
  </Settings>
  <Routines>
    <Routine name="FinanceProblem">
      <TextComponent name="text_4">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text_4" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$'%s\n\nPress space when you are done reading' % problemtext" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="setimg">
      <CodeComponent name="setimgcode">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="setimgcode" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="if (xpos == -.25 and corrResp == 1) or (xpos == .25 and corrResp == 0):&amp;#10;    stimimg=congr&amp;#10;elif (xpos == -.25 and corrResp == 0) or (xpos == .25 and corrResp == 1):&amp;#10;    stimimg=incongr" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="Feedback">
      <TextComponent name="feedbacktext">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="feedbacktext" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$'You got %s correct. %s\n\nPress Space to Continue' % (numcorrect, feedbackmsg)" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Howwouldyousolve">
      <TextComponent name="text_5">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text_5" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$'%s\n\nWrite down what you would do and press space to continue' % problemtext" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val=".025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="spatialtrial">
      <TextComponent name="Fixation2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Fixation2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="stopVal" updates="constant" val="1.25" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <ImageComponent name="stimulus">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="stimulus" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val=".75" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="set every repeat" val="(xpos,0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".5" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$stimimg" valType="str"/>
        <Param name="size" updates="constant" val="(0.2, 0.2)" valType="code"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="correctAns" updates="constant" val="$corrResp" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="stopVal" updates="constant" val=".75" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1','0'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val=".5" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="Recordimg">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="Recordimg" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="thisExp.addData('img', stimimg)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="InstrTrial">
      <TextComponent name="Fixation">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Fixation" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
      </TextComponent>
      <ImageComponent name="stim">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="stim" valType="code"/>
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="pos" updates="set every repeat" val="$(xpos, 0)" valType="code"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$stimimg" valType="str"/>
        <Param name="size" updates="constant" val="(0.2, 0.2)" valType="code"/>
      </ImageComponent>
      <TextComponent name="answerprompt">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="answerprompt" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$'Press %s' % corrResp" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, .4)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="demoinput">
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="name" updates="None" val="demoinput" valType="code"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="allowedKeys" updates="constant" val="'1','0'" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="RecordImage">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="RecordImage" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="thisExp.addData('img', stimimg)" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="Practicecounter">
      <CodeComponent name="code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="numcorrect+=key_resp_2.corr" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="FinanceInstr">
      <TextComponent name="text_2">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text_2" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="You will see a series of financial problems.&amp;#10;&amp;#10;After you read each problem, you will play the heart and star game while you think of a solution.&amp;#10;&amp;#10;Then you will have a chance to enter your solution.&amp;#10;&amp;#10;Press space to continue." valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val=".025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="breaklooproutine">
      <CodeComponent name="breakloop">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="breakloop" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="if numcorrect &gt;=7:&amp;#10;    Practicing.finished=True&amp;#10;    feedbackmsg=''&amp;#10;else:&amp;#10;    feedbackmsg='Let\'s try again'" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="PractInstr">
      <TextComponent name="practiceinstr">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="practiceinstr" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="Let's Practice!&amp;#10;&amp;#10;Press Space to Continue" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_2">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="numcorrect=0" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instr3">
      <TextComponent name="Instr3Text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Instr3Text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="Here are some examples of correct responses.&amp;#10;&amp;#10;Press Space to continue." valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val=".025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Instr1">
      <TextComponent name="Instr1Text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Instr1Text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="In this experiment, you will think about financial problems while completing a simple task.&amp;#10;&amp;#10;You will complete the task by pressing the &quot;0&quot; or &quot;1&quot; keys.&amp;#10;&amp;#10;The key you press will depend on what image is shown.&amp;#10;&amp;#10;(press space to continue)" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="1" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
      <CodeComponent name="initcode">
        <Param name="Begin Experiment" updates="constant" val="if expInfo['stimorder'] == '1':&amp;#10;    congr=&quot;TessImages/1.jpg&quot; #Heart&amp;#10;    congr_txt=&quot;heart&quot;&amp;#10;    incongr=&quot;TessImages/2.jpg&quot;#Star&amp;#10;    incongr_txt=&quot;star&quot;&amp;#10;elif expInfo['stimorder'] == '2':&amp;#10;    congr=&quot;TessImages/2.jpg&quot; #Star&amp;#10;    congr_txt=&quot;star&quot;&amp;#10;    incongr=&quot;TessImages/1.jpg&quot;#Heart&amp;#10;    incongr_txt=&quot;heart&quot;&amp;#10;else:&amp;#10;    msg=&quot;Inputs do not make sense&quot;&amp;#10;    core.quit()&amp;#10;" valType="extendedCode"/>
        <Param name="name" updates="None" val="initcode" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="setproblem">
      <CodeComponent name="code_3">
        <Param name="Begin Experiment" updates="constant" val="import sys&amp;#10;if expInfo['manigroup'] is not 'H' and expInfo['manigroup'] is not 'L':&amp;#10;    print 'Bad manigroup entered must be H or L'&amp;#10;    core.quit&amp;#10;    " valType="extendedCode"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
        <Param name="Begin Routine" updates="constant" val="if expInfo['manigroup'] == 'H':&amp;#10;    problemtext=ProblemHigh&amp;#10;if expInfo['manigroup'] == 'L':&amp;#10;    problemtext=ProblemLow" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instr4">
      <TextComponent name="text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="$'When the image of a %s is shown you will press the key that is on the OPPOSITE side of the screen that the %s is shown on. \n\nFor example, a correct response would be pressing the &quot;1&quot; key when the %s is on the right side of the screen\n\nPress space to continue.' % (incongr_txt,incongr_txt,incongr_txt)" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val=".025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="Instr2">
      <TextComponent name="Instr2Text">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="Instr2Text" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="set every repeat" val="$'When the image of a %s is shown you will press the key that is on the SAME side of the screen that the %s is shown on. \n\nFor example, a correct response would be pressing the &quot;1&quot; key when the %s is on the left side of the screen\n\nPress space to continue.' % (congr_txt,congr_txt,congr_txt)" valType="str"/>
        <Param name="stopVal" updates="constant" val="event.getKeys('space')" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="getready">
      <TextComponent name="text_3">
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="name" updates="None" val="text_3" valType="code"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
        <Param name="color" updates="constant" val="black" valType="str"/>
        <Param name="text" updates="constant" val="Get Ready!" valType="str"/>
        <Param name="stopVal" updates="constant" val="2.0" valType="code"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.025" valType="code"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Instr1"/>
    <Routine name="Instr2"/>
    <Routine name="Instr3"/>
    <LoopInitiator loopType="TrialHandler" name="demo1trials">
      <Param name="conditionsFile" updates="None" val="demo.xls" valType="str"/>
      <Param name="name" updates="None" val="demo1trials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'corrResp': 1, 'xpos': -0.25}, {'corrResp': 0, 'xpos': 0.25}, {'corrResp': 0, 'xpos': -0.25}, {'corrResp': 1, 'xpos': 0.25}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="0,1" valType="str"/>
    </LoopInitiator>
    <Routine name="setimg"/>
    <Routine name="InstrTrial"/>
    <LoopTerminator name="demo1trials"/>
    <Routine name="Instr4"/>
    <Routine name="Instr3"/>
    <LoopInitiator loopType="TrialHandler" name="demo2trials">
      <Param name="conditionsFile" updates="None" val="demo.xls" valType="str"/>
      <Param name="name" updates="None" val="demo2trials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'corrResp': 1, 'xpos': -0.25}, {'corrResp': 0, 'xpos': 0.25}, {'corrResp': 0, 'xpos': -0.25}, {'corrResp': 1, 'xpos': 0.25}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="2,3" valType="str"/>
    </LoopInitiator>
    <Routine name="setimg"/>
    <Routine name="InstrTrial"/>
    <LoopTerminator name="demo2trials"/>
    <LoopInitiator loopType="TrialHandler" name="Practicing">
      <Param name="conditionsFile" updates="None" val="" valType="str"/>
      <Param name="name" updates="None" val="Practicing" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="PractInstr"/>
    <LoopInitiator loopType="TrialHandler" name="PracticeTrials">
      <Param name="conditionsFile" updates="None" val="demo.xls" valType="str"/>
      <Param name="name" updates="None" val="PracticeTrials" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'corrResp': 1, 'xpos': -0.25}, {'corrResp': 0, 'xpos': 0.25}, {'corrResp': 0, 'xpos': -0.25}, {'corrResp': 1, 'xpos': 0.25}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="setimg"/>
    <Routine name="spatialtrial"/>
    <Routine name="Practicecounter"/>
    <LoopTerminator name="PracticeTrials"/>
    <Routine name="breaklooproutine"/>
    <Routine name="Feedback"/>
    <LoopTerminator name="Practicing"/>
    <Routine name="FinanceInstr"/>
    <LoopInitiator loopType="TrialHandler" name="FinanceProblems">
      <Param name="conditionsFile" updates="None" val="Problems.xls" valType="str"/>
      <Param name="name" updates="None" val="FinanceProblems" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'ProblemHigh': u'Imagine that you accidentally drop a classmate\u2019s iPhone and shatter the screen. After they take the phone into the Apple Store they tell you the cost to replace the phone will be $599. Are there ways in which you would be able to come up with the money on a very short notice?  How would you go about doing this? Would you have to go to a third-party to come up with the money? What consequences would this financial burden have on you?', 'ProblemLow': u'Imagine that you accidentally drop a classmate\u2019s iPhone and shatter the screen. After they take the phone into the Apple Store they tell you the cost of the screen will be $100. Are there ways in which you would be able to come up with the money on a very short notice? How would you go about doing this? Would you have to go to a third-party to come up with the money? What consequences would this financial burden have on you?'}, {'ProblemHigh': u'Imagine you\u2019re doing homework with friends after school. One of your friends is using their laptop and as you reach for your notebook you accidentally knock over a glass of water which spills all over their laptop. This results in water damage to the laptop and they ask you to cover the repair fee of $800. Would you have the money necessary to cover the damage? How would you get the money? Would you able to cover the damage fees for your friend immediately or would you have to pay them back over a period of time?', 'ProblemLow': u'Imagine you\u2019re doing homework with friends after school. One of your friends is using their laptop and as you reach for your notebook you accidentally knock over a glass of water which spills all over their laptop. This results in a broken keyboard and they ask you to cover the repair fee of $90. Would you have the money necessary to cover the damage? How would you get the money? Would you able to cover the damage fees for your friend immediately or would you have to pay them back over a period of time?'}, {'ProblemHigh': u'You have joined in a club at your high school and at the end of the school year the entire club, including your friends, will be participating in a weekend trip. The cost for the trip is $1,350. You really want to go on this field trip, how would you personally choose to fund it? Could you pay the amount in full, or pay in monthly club fees? Or would you need to skip it? Would this decision be difficult for you to make? What factors will impact how you make this decision?', 'ProblemLow': u'You have joined in a club at your high school and at the end of the school year the entire club, including your friends, will be participating in a weekend trip. The cost for the trip is $150. You really want to go on this field trip, how would you choose to personally fund it? Could you pay the amount in full, or pay in monthly club fees? Or would you need to skip it? Would this decision be difficult for you to make? What factors will impact how you make this decision?'}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="setproblem"/>
    <Routine name="FinanceProblem"/>
    <Routine name="getready"/>
    <LoopInitiator loopType="TrialHandler" name="SpatialLoop">
      <Param name="conditionsFile" updates="None" val="demo.xls" valType="str"/>
      <Param name="name" updates="None" val="SpatialLoop" valType="code"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="conditions" updates="None" val="[{'corrResp': 1, 'xpos': -0.25}, {'corrResp': 0, 'xpos': 0.25}, {'corrResp': 0, 'xpos': -0.25}, {'corrResp': 1, 'xpos': 0.25}, {'corrResp': 1, 'xpos': -0.25}, {'corrResp': 0, 'xpos': 0.25}, {'corrResp': 0, 'xpos': -0.25}, {'corrResp': 1, 'xpos': 0.25}]" valType="str"/>
      <Param name="Selected rows" updates="None" val="" valType="str"/>
    </LoopInitiator>
    <Routine name="setimg"/>
    <Routine name="spatialtrial"/>
    <LoopTerminator name="SpatialLoop"/>
    <Routine name="Howwouldyousolve"/>
    <LoopTerminator name="FinanceProblems"/>
  </Flow>
</PsychoPy2experiment>
